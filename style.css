/* @import url("CSS/media-query.css");
@import url("CSS/normalize.css"); 
@media screen and(min-width:30em) {
}
*/

body {
  background: #000;
}

ul {
  margin: 0 auto;
  max-width: 960px;
  background: rgb(255, 157, 157);
  padding: 20px;
  list-style: none;
  border-radius: 0 0 12px 12px;
  /* FLEXBOX */
  display: flex;
  flex-flow: row wrap;
}

ul li,
div {
  border: 1px solid rgb(0, 0, 0);
  padding: 20px;
  margin-left: -1px;
  flex: 1 0 3em;
}

ul li:first-child {
  border-radius: 0 0 0 12px;
}
ul li:last-child {
  border-radius: 0 0 12px 0;
}

/* 
FOR CHILDS:
ul:first-child
ul:last-child
ul li:nth-child(1) // Cible le premier enfant ----->
ul li:nth-last-child(1) // Cible le dernier enfant <-----

ul li:nth-child(2n) = ul li:nth-child(even) // Pair
ul li:nth-child(2n + 1) = ul li:nth-child(odd) // Impair

FOR CHILDS TYPES:
ul:first-of-type
ul:last-of-type
ul li:nth-of-type(1) // Cible le premier enfant de même type ----->
ul li:nth-last-of-type(1) // Cible le dernier enfant de même type <-----

ul li:nth-of-type(2n) = ul li:nth-of-type(even)
ul li:nth-of-type(2n+1) = ul li:nth-of-type(odd)



*/

ul li:nth-last-of-type(5) {
  background: rgb(255, 59, 59);
}
